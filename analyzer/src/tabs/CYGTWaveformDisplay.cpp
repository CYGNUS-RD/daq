////////////////////////////////////////////////////////////////////////////////
//                                                                            //
// CYGTWaveformDisplay                                                        //
//                                                                            //
// Begin_Html <!--
/*-->

<!--*/
// --> End_Html
//                                                                            //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

/* Generated header file containing necessary includes                        */
#include "generated/CYGTWaveformDisplayGeneratedIncludes.h"

////////////////////////////////////////////////////////////////////////////////
/*  This header was generated by ROMEBuilder. Manual changes above the        *
 * following line will be lost next time ROMEBuilder is executed.             */
/////////////////////////////////////----///////////////////////////////////////

#include "generated/CYGWindow.h"
#include "generated/CYGEvent.h"
#include "generated/CYGAnalyzer.h"
#include "tabs/CYGTWaveformDisplay.h"
#include "TCanvas.h"
#include "TStyle.h"
#include "TROOT.h"
//#include <TGNumberEntry.h>
//#include <TGLabel.h>

// uncomment if you want to include headers of all folders
//#include "CYGAllFolders.h"


ClassImp(CYGTWaveformDisplay)

//______________________________________________________________________________
void CYGTWaveformDisplay::Init()
{
  gStyle->SetOptStat(0);
  gStyle->SetPalette(52);
  
  TGVerticalFrame *fVerticalFrame = new TGVerticalFrame(this,800,700,kVerticalFrame);
  
  fCanvasDig = new TRootEmbeddedCanvas("fCanvasDig",this,500,600);
  Int_t wfCanvasDig = fCanvasDig->GetCanvasWindowId();
  TCanvas *cDig = new TCanvas("cDig", 480, 150, wfCanvasDig);
  cDig->Divide(1,6);
  for(int ic=0;ic<6;ic++){
    cDig->cd(ic)->SetBottomMargin(0.17);
  }
  fCanvasDig->AdoptCanvas(cDig);
  fVerticalFrame->AddFrame(fCanvasDig, new TGLayoutHints(kLHintsLeft | kLHintsBottom,2,2,2,2));
  
  AddFrame(fVerticalFrame, new TGLayoutHints(kLHintsLeft | kLHintsTop,2,2,2,2));
  
}

//______________________________________________________________________________
void CYGTWaveformDisplay::EndInit()
{
}

//______________________________________________________________________________
void CYGTWaveformDisplay::EventHandler()
{
  CYGEvent *event = gAnalyzer->GetEvent();

  int position[3]={0,6,8};
  char titles[3][10]={ {"PMT"} , {"GEM"} , {"MESH"} };
  double yrange[3][2]={ {-1000.,250.} , {-1000.,250.} , {-1000.,250.} };

  if(event->GetDGTZWaveformSize()>0){
    for(int chan=0;chan<6;chan++){
      fCanvasDig->GetCanvas()->cd(position[chan]+1);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->SetTitle(titles[chan]);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetXaxis()->SetTitleSize(0.1);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetTitleSize(0.1);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetXaxis()->SetTitleOffset(0.8);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetTitleOffset(0.5);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetXaxis()->SetLabelSize(0.1);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetLabelSize(0.1);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetXaxis()->SetTitle("Time [ns]");
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetTitle("Amp [mV]");
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->Draw("AL");
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetNdivisions(505);
      event->GetDGTZWaveformAt(position[chan])->GetGraph()->GetYaxis()->SetRangeUser(yrange[chan][0],yrange[chan][1]);
    }
  }

  fCanvasDig->GetCanvas()->Update();  
  
}

//______________________________________________________________________________
void CYGTWaveformDisplay::MenuClicked(TGPopupMenu * /* menu */, Long_t /* param */)
{
}

//______________________________________________________________________________
void CYGTWaveformDisplay::TabSelected()
{
}

//______________________________________________________________________________
void CYGTWaveformDisplay::TabUnSelected()
{
}

