/********************************************************************\

  Name:         experim.h
  Created by:   ODBedit program

  Contents:     This file contains C structures for the "Experiment"
                tree in the ODB and the "/Analyzer/Parameters" tree.

                Additionally, it contains the "Settings" subtree for
                all items listed under "/Equipment" as well as their
                event definition.

                It can be used by the frontend and analyzer to work
                with these information.

                All C structures are accompanied with a string represen-
                tation which can be used in the db_create_record function
                to setup an ODB structure which matches the C structure.

  Created on:   Mon Oct 18 14:56:53 2021

\********************************************************************/

#define EXP_PARAM_DEFINED

typedef struct {
  char      run_description[256];
  struct {
    struct {
      INT32     gemgeometryid;
    } gem;
  } sql;
} EXP_PARAM;

#define EXP_PARAM_STR(_name) const char *_name[] = {\
"[.]",\
"Run description = STRING : [256] Long term stability test, long exposure (1 s), 55Fe source distance 28cm",\
"",\
"[SQL/GEM]",\
"GEMGeometryId = INT32 : 0",\
"",\
NULL }

#define EXP_EDIT_DEFINED

typedef struct {
  char      run_description[256];
} EXP_EDIT;

#define EXP_EDIT_STR(_name) const char *_name[] = {\
"[.]",\
"Run description = LINK : [43] /Experiment/Run Parameters/Run description",\
"",\
NULL }

#ifndef EXCL_HV

#define HV_EVENT_DEFINED

typedef struct {
  float     demand[64];
  float     measured[64];
  float     current[64];
  UINT32    chstatus[64];
  INT32     recovery;
  UINT32    chstate[64];
} HV_EVENT;

#define HV_EVENT_STR(_name) const char *_name[] = {\
"[.]",\
"Demand = FLOAT[64] :",\
"[0] 10",\
"[1] 0",\
"[2] 2",\
"[3] 0",\
"[4] 400",\
"[5] 0",\
"[6] 1400",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 50",\
"[12] 0",\
"[13] 0",\
"[14] 0",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 770",\
"[20] 935",\
"[21] 825",\
"[22] 935",\
"[23] 0",\
"[24] 0",\
"[25] 0",\
"[26] 0",\
"[27] 0",\
"[28] 0",\
"[29] 0",\
"[30] 0",\
"[31] 0",\
"[32] 0",\
"[33] 0",\
"[34] 0",\
"[35] 0",\
"[36] 10",\
"[37] 350",\
"[38] 500",\
"[39] 350",\
"[40] 650",\
"[41] 350",\
"[42] 200",\
"[43] 0",\
"[44] 0",\
"[45] 0",\
"[46] 0",\
"[47] 0",\
"[48] 0",\
"[49] 0",\
"[50] 10",\
"[51] 440",\
"[52] 500",\
"[53] 440",\
"[54] 500",\
"[55] 440",\
"[56] 840",\
"[57] 0",\
"[58] 0",\
"[59] 0",\
"[60] 0",\
"[61] 0",\
"[62] 0",\
"[63] 0",\
"Measured = FLOAT[64] :",\
"[0] 0",\
"[1] 0",\
"[2] 0",\
"[3] 0",\
"[4] 0",\
"[5] 0",\
"[6] 0",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 0",\
"[12] 0.5",\
"[13] 0.75",\
"[14] 0.75",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 0.75",\
"[20] 0",\
"[21] 0",\
"[22] 0",\
"[23] 0",\
"[24] 0.25",\
"[25] 0",\
"[26] 0",\
"[27] 0.75",\
"[28] 0.25",\
"[29] 1",\
"[30] 0.25",\
"[31] 0",\
"[32] 0.5",\
"[33] 0.5",\
"[34] 0.5",\
"[35] 0.25",\
"[36] 0.14",\
"[37] 0.1",\
"[38] 0.06",\
"[39] 0.18",\
"[40] 0.18",\
"[41] 0.02",\
"[42] 0.1",\
"[43] 0",\
"[44] 0.02",\
"[45] 0.04",\
"[46] 0.02",\
"[47] 0",\
"[48] 0.06",\
"[49] 0.02",\
"[50] 10.66",\
"[51] 440.34",\
"[52] 500.52",\
"[53] 440.3",\
"[54] 500.58",\
"[55] 440.32",\
"[56] 841.02",\
"[57] 0",\
"[58] 0",\
"[59] 0",\
"[60] 0",\
"[61] 0",\
"[62] 0.14",\
"[63] 0",\
"Current = FLOAT[64] :",\
"[0] 0",\
"[1] 0",\
"[2] 0",\
"[3] 0",\
"[4] 0",\
"[5] 0",\
"[6] 0",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 0",\
"[12] 0",\
"[13] 0",\
"[14] 0",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 0",\
"[20] 0",\
"[21] 0",\
"[22] 0",\
"[23] 0",\
"[24] 0",\
"[25] 0",\
"[26] 0",\
"[27] 0",\
"[28] 0",\
"[29] 0",\
"[30] 0",\
"[31] 0",\
"[32] 0",\
"[33] 0",\
"[34] 0",\
"[35] 0",\
"[36] -0.0286",\
"[37] -0.0376",\
"[38] -0.0513",\
"[39] -0.0445",\
"[40] -0.0427",\
"[41] -0.024",\
"[42] -0.0206",\
"[43] -0.0062",\
"[44] -0.0035",\
"[45] -0.0087",\
"[46] 0.0017",\
"[47] 0.0113",\
"[48] -0.0001",\
"[49] -0.0045",\
"[50] -0.0033",\
"[51] 0",\
"[52] 0.004",\
"[53] 0",\
"[54] -0.0039",\
"[55] 0",\
"[56] 0",\
"[57] 0.0002",\
"[58] -0.0086",\
"[59] 0.0047",\
"[60] 0.0025",\
"[61] -0.0041",\
"[62] -0.0023",\
"[63] -0.0019",\
"ChStatus = UINT32[64] :",\
"[0] 0",\
"[1] 0",\
"[2] 0",\
"[3] 0",\
"[4] 0",\
"[5] 0",\
"[6] 0",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 0",\
"[12] 0",\
"[13] 0",\
"[14] 0",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 0",\
"[20] 0",\
"[21] 0",\
"[22] 0",\
"[23] 0",\
"[24] 0",\
"[25] 0",\
"[26] 0",\
"[27] 0",\
"[28] 0",\
"[29] 0",\
"[30] 0",\
"[31] 0",\
"[32] 0",\
"[33] 0",\
"[34] 0",\
"[35] 0",\
"[36] 0",\
"[37] 0",\
"[38] 0",\
"[39] 0",\
"[40] 0",\
"[41] 0",\
"[42] 0",\
"[43] 0",\
"[44] 0",\
"[45] 0",\
"[46] 0",\
"[47] 0",\
"[48] 0",\
"[49] 0",\
"[50] 1",\
"[51] 1",\
"[52] 1",\
"[53] 1",\
"[54] 1",\
"[55] 1",\
"[56] 1",\
"[57] 0",\
"[58] 0",\
"[59] 0",\
"[60] 0",\
"[61] 0",\
"[62] 0",\
"[63] 0",\
"Recovery = INT32 : 0",\
"ChState = UINT32[64] :",\
"[0] 0",\
"[1] 0",\
"[2] 0",\
"[3] 0",\
"[4] 0",\
"[5] 0",\
"[6] 0",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 0",\
"[12] 0",\
"[13] 0",\
"[14] 0",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 0",\
"[20] 0",\
"[21] 0",\
"[22] 0",\
"[23] 0",\
"[24] 0",\
"[25] 0",\
"[26] 0",\
"[27] 0",\
"[28] 0",\
"[29] 0",\
"[30] 0",\
"[31] 0",\
"[32] 0",\
"[33] 0",\
"[34] 0",\
"[35] 0",\
"[36] 0",\
"[37] 0",\
"[38] 0",\
"[39] 0",\
"[40] 0",\
"[41] 0",\
"[42] 0",\
"[43] 0",\
"[44] 0",\
"[45] 0",\
"[46] 0",\
"[47] 0",\
"[48] 0",\
"[49] 0",\
"[50] 1",\
"[51] 1",\
"[52] 1",\
"[53] 1",\
"[54] 1",\
"[55] 1",\
"[56] 1",\
"[57] 0",\
"[58] 0",\
"[59] 0",\
"[60] 0",\
"[61] 0",\
"[62] 0",\
"[63] 0",\
"",\
NULL }

#define HV_COMMON_DEFINED

typedef struct {
  UINT16    event_id;
  UINT16    trigger_mask;
  char      buffer[32];
  INT32     type;
  INT32     source;
  char      format[8];
  BOOL      enabled;
  INT32     read_on;
  INT32     period;
  double    event_limit;
  UINT32    num_subevents;
  INT32     log_history;
  char      frontend_host[32];
  char      frontend_name[32];
  char      frontend_file_name[256];
  char      status[256];
  char      status_color[32];
  BOOL      hidden;
  INT32     write_cache_size;
} HV_COMMON;

#define HV_COMMON_STR(_name) const char *_name[] = {\
"[.]",\
"Event ID = UINT16 : 3",\
"Trigger mask = UINT16 : 0",\
"Buffer = STRING : [32] SYSTEM",\
"Type = INT32 : 16",\
"Source = INT32 : 0",\
"Format = STRING : [8] FIXED",\
"Enabled = BOOL : y",\
"Read on = INT32 : 255",\
"Period = INT32 : 60000",\
"Event limit = DOUBLE : 0",\
"Num subevents = UINT32 : 0",\
"Log history = INT32 : 1",\
"Frontend host = STRING : [32] localhost",\
"Frontend name = STRING : [32] SC Frontend",\
"Frontend file name = STRING : [256] /home/cygno/DAQ/online/scfe.cxx",\
"Status = STRING : [256] Ok",\
"Status color = STRING : [32] greenLight",\
"Hidden = BOOL : n",\
"Write cache size = INT32 : 0",\
"",\
NULL }

#define HV_SETTINGS_DEFINED

typedef struct {
  struct {
    struct {
      BOOL      enabled;
      struct {
        char      system_name[32];
        char      ip[32];
        INT32     linktype;
        INT32     first_slot;
        INT32     cratemap;
      } dd;
      struct {
        char      description[22];
        char      model[6];
        UINT16    channels;
      } slot_1;
      struct {
        char      description[22];
        char      model[6];
        UINT16    channels;
      } slot_4;
      struct {
        char      description[22];
        char      model[6];
        UINT16    channels;
      } slot_7;
      struct {
        char      description[22];
        char      model[8];
        UINT16    channels;
      } slot_13;
      struct {
        char      description[22];
        char      model[8];
        UINT16    channels;
      } slot_14;
    } sy4527;
  } devices;
  char      editable[2][32];
  float     update_threshold_measured[64];
  float     update_threshold_current[64];
  float     zero_threshold[64];
  float     voltage_limit[64];
  float     current_limit[64];
  float     current_hot_spot[64];
  float     trip_time[64];
  float     ramp_up_speed[64];
  float     ramp_down_speed[64];
  INT32     recovery;
  char      names[64][32];
} HV_SETTINGS;

#define HV_SETTINGS_STR(_name) const char *_name[] = {\
"[Devices/sy4527]",\
"Enabled = BOOL : y",\
"",\
"[Devices/sy4527/DD]",\
"System Name = STRING : [32] daqhv02",\
"IP = STRING : [32] 192.168.1.158",\
"LinkType = INT32 : 0",\
"First Slot = INT32 : 0",\
"crateMap = INT32 : 0",\
"",\
"[Devices/sy4527/Slot 1]",\
"Description = STRING : [22]  12 Ch Pos. 3KV 20uA ",\
"Model = STRING : [6] A1821",\
"Channels = UINT16 : 12",\
"",\
"[Devices/sy4527/Slot 4]",\
"Description = STRING : [22]  12 Ch Neg. 3KV 3mA  ",\
"Model = STRING : [6] A1833",\
"Channels = UINT16 : 12",\
"",\
"[Devices/sy4527/Slot 7]",\
"Description = STRING : [22]  12 Ch Neg. 4KV 200uA",\
"Model = STRING : [6] A1833",\
"Channels = UINT16 : 12",\
"",\
"[Devices/sy4527/Slot 13]",\
"Description = STRING : [22]  14 Ch Float 1KV 1mA ",\
"Model = STRING : [8] A1515TG",\
"Channels = UINT16 : 14",\
"",\
"[Devices/sy4527/Slot 14]",\
"Description = STRING : [22]  14 Ch Float 1KV 1mA ",\
"Model = STRING : [8] A1515TG",\
"Channels = UINT16 : 14",\
"",\
"[.]",\
"Editable = STRING[2] :",\
"[32] Demand",\
"[32] ChState",\
"Update Threshold Measured = FLOAT[64] :",\
"[0] 0.1",\
"[1] 0.1",\
"[2] 0.1",\
"[3] 0.1",\
"[4] 0.1",\
"[5] 0.1",\
"[6] 0.1",\
"[7] 0.1",\
"[8] 0.1",\
"[9] 0.1",\
"[10] 0.1",\
"[11] 0.1",\
"[12] 0.1",\
"[13] 0.1",\
"[14] 0.1",\
"[15] 0.1",\
"[16] 0.1",\
"[17] 0.1",\
"[18] 0.1",\
"[19] 0.1",\
"[20] 0.1",\
"[21] 0.1",\
"[22] 0.1",\
"[23] 0.1",\
"[24] 0.1",\
"[25] 0.1",\
"[26] 0.1",\
"[27] 0.1",\
"[28] 0.1",\
"[29] 0.1",\
"[30] 0.1",\
"[31] 0.1",\
"[32] 0.1",\
"[33] 0.1",\
"[34] 0.1",\
"[35] 0.1",\
"[36] 0.1",\
"[37] 0.1",\
"[38] 0.1",\
"[39] 0.1",\
"[40] 0.1",\
"[41] 0.1",\
"[42] 0.1",\
"[43] 0.1",\
"[44] 0.1",\
"[45] 0.1",\
"[46] 0.1",\
"[47] 0.1",\
"[48] 0.1",\
"[49] 0.1",\
"[50] 0.1",\
"[51] 0.1",\
"[52] 0.1",\
"[53] 0.1",\
"[54] 0.1",\
"[55] 0.1",\
"[56] 0.1",\
"[57] 0.1",\
"[58] 0.1",\
"[59] 0.1",\
"[60] 0.1",\
"[61] 0.1",\
"[62] 0.1",\
"[63] 0.1",\
"Update Threshold Current = FLOAT[64] :",\
"[0] 0.01",\
"[1] 0.01",\
"[2] 0.01",\
"[3] 0.01",\
"[4] 0.01",\
"[5] 0.01",\
"[6] 0.01",\
"[7] 0.01",\
"[8] 0.01",\
"[9] 0.01",\
"[10] 0.01",\
"[11] 0.01",\
"[12] 0.01",\
"[13] 0.01",\
"[14] 0.01",\
"[15] 0.01",\
"[16] 0.01",\
"[17] 0.01",\
"[18] 0.01",\
"[19] 0.01",\
"[20] 0.01",\
"[21] 0.01",\
"[22] 0.01",\
"[23] 0.01",\
"[24] 0.01",\
"[25] 0.01",\
"[26] 0.01",\
"[27] 0.01",\
"[28] 0.01",\
"[29] 0.01",\
"[30] 0.01",\
"[31] 0.01",\
"[32] 0.01",\
"[33] 0.01",\
"[34] 0.01",\
"[35] 0.01",\
"[36] 0.01",\
"[37] 0.01",\
"[38] 0.01",\
"[39] 0.01",\
"[40] 0.01",\
"[41] 0.01",\
"[42] 0.01",\
"[43] 0.01",\
"[44] 0.01",\
"[45] 0.01",\
"[46] 0.01",\
"[47] 0.01",\
"[48] 0.01",\
"[49] 0.01",\
"[50] 0.01",\
"[51] 0.01",\
"[52] 0.01",\
"[53] 0.01",\
"[54] 0.01",\
"[55] 0.01",\
"[56] 0.01",\
"[57] 0.01",\
"[58] 0.01",\
"[59] 0.01",\
"[60] 0.01",\
"[61] 0.01",\
"[62] 0.01",\
"[63] 0.01",\
"Zero Threshold = FLOAT[64] :",\
"[0] 20",\
"[1] 20",\
"[2] 20",\
"[3] 20",\
"[4] 20",\
"[5] 20",\
"[6] 20",\
"[7] 20",\
"[8] 20",\
"[9] 20",\
"[10] 20",\
"[11] 20",\
"[12] 20",\
"[13] 20",\
"[14] 20",\
"[15] 20",\
"[16] 20",\
"[17] 20",\
"[18] 20",\
"[19] 20",\
"[20] 20",\
"[21] 20",\
"[22] 20",\
"[23] 20",\
"[24] 20",\
"[25] 20",\
"[26] 20",\
"[27] 20",\
"[28] 20",\
"[29] 20",\
"[30] 20",\
"[31] 20",\
"[32] 20",\
"[33] 20",\
"[34] 20",\
"[35] 20",\
"[36] 20",\
"[37] 20",\
"[38] 20",\
"[39] 20",\
"[40] 20",\
"[41] 20",\
"[42] 20",\
"[43] 20",\
"[44] 20",\
"[45] 20",\
"[46] 20",\
"[47] 20",\
"[48] 20",\
"[49] 20",\
"[50] 20",\
"[51] 20",\
"[52] 20",\
"[53] 20",\
"[54] 20",\
"[55] 20",\
"[56] 20",\
"[57] 20",\
"[58] 20",\
"[59] 20",\
"[60] 20",\
"[61] 20",\
"[62] 20",\
"[63] 20",\
"Voltage Limit = FLOAT[64] :",\
"[0] 2900",\
"[1] 2900",\
"[2] 2900",\
"[3] 2900",\
"[4] 2900",\
"[5] 2900",\
"[6] 3000",\
"[7] 3000",\
"[8] 3000",\
"[9] 3000",\
"[10] 3000",\
"[11] 3000",\
"[12] 2550",\
"[13] 2500",\
"[14] 2550",\
"[15] 2550",\
"[16] 2660",\
"[17] 2800",\
"[18] 2800",\
"[19] 2800",\
"[20] 3000",\
"[21] 3000",\
"[22] 3000",\
"[23] 3000",\
"[24] 4000",\
"[25] 4000",\
"[26] 4000",\
"[27] 4000",\
"[28] 4000",\
"[29] 4000",\
"[30] 4000",\
"[31] 4000",\
"[32] 1550",\
"[33] 4000",\
"[34] 4000",\
"[35] 4000",\
"[36] 1000",\
"[37] 1000",\
"[38] 1000",\
"[39] 1000",\
"[40] 1000",\
"[41] 1000",\
"[42] 1000",\
"[43] 1000",\
"[44] 1000",\
"[45] 1000",\
"[46] 1000",\
"[47] 1000",\
"[48] 1000",\
"[49] 1000",\
"[50] 1000",\
"[51] 443",\
"[52] 505",\
"[53] 443",\
"[54] 505",\
"[55] 443",\
"[56] 1000",\
"[57] 100",\
"[58] 470",\
"[59] 655",\
"[60] 470",\
"[61] 505",\
"[62] 470",\
"[63] 10",\
"Current Limit = FLOAT[64] :",\
"[0] 10",\
"[1] 10",\
"[2] 10",\
"[3] 10",\
"[4] 10",\
"[5] 10",\
"[6] 10",\
"[7] 0.5",\
"[8] 0.5",\
"[9] 0.5",\
"[10] 0.5",\
"[11] 0.5",\
"[12] 2000",\
"[13] 2000",\
"[14] 2000",\
"[15] 2000",\
"[16] 2000",\
"[17] 2000",\
"[18] 2000",\
"[19] 2000",\
"[20] 2000",\
"[21] 2000",\
"[22] 2000",\
"[23] 0",\
"[24] 2",\
"[25] 2",\
"[26] 2",\
"[27] 2",\
"[28] 2",\
"[29] 2",\
"[30] 2",\
"[31] 0",\
"[32] 2",\
"[33] 2",\
"[34] 2",\
"[35] 0",\
"[36] 10",\
"[37] 10",\
"[38] 10",\
"[39] 10",\
"[40] 10",\
"[41] 10",\
"[42] 10",\
"[43] 10",\
"[44] 10",\
"[45] 10",\
"[46] 10",\
"[47] 10",\
"[48] 10",\
"[49] 10",\
"[50] 10",\
"[51] 10",\
"[52] 10",\
"[53] 10",\
"[54] 10",\
"[55] 10",\
"[56] 10",\
"[57] 10",\
"[58] 10",\
"[59] 10",\
"[60] 10",\
"[61] 10",\
"[62] 10",\
"[63] 10",\
"Current Hot Spot = FLOAT[64] :",\
"[0] 10",\
"[1] 10",\
"[2] 10",\
"[3] 10",\
"[4] 10",\
"[5] 10",\
"[6] 10",\
"[7] 10",\
"[8] 10",\
"[9] 10",\
"[10] 10",\
"[11] 10",\
"[12] 10",\
"[13] 10",\
"[14] 10",\
"[15] 10",\
"[16] 10",\
"[17] 10",\
"[18] 10",\
"[19] 10",\
"[20] 10",\
"[21] 10",\
"[22] 10",\
"[23] 10",\
"[24] 10",\
"[25] 10",\
"[26] 10",\
"[27] 10",\
"[28] 10",\
"[29] 10",\
"[30] 10",\
"[31] 10",\
"[32] 10",\
"[33] 10",\
"[34] 10",\
"[35] 10",\
"[36] 10",\
"[37] 10",\
"[38] 10",\
"[39] 10",\
"[40] 10",\
"[41] 10",\
"[42] 10",\
"[43] 10",\
"[44] 10",\
"[45] 10",\
"[46] 10",\
"[47] 10",\
"[48] 10",\
"[49] 10",\
"[50] 10",\
"[51] 10",\
"[52] 10",\
"[53] 10",\
"[54] 10",\
"[55] 10",\
"[56] 10",\
"[57] 10",\
"[58] 10",\
"[59] 10",\
"[60] 10",\
"[61] 10",\
"[62] 10",\
"[63] 10",\
"Trip Time = FLOAT[64] :",\
"[0] 1",\
"[1] 0.1",\
"[2] 1",\
"[3] 1",\
"[4] 1",\
"[5] 1",\
"[6] 1",\
"[7] 50",\
"[8] 1000",\
"[9] 1000",\
"[10] 1000",\
"[11] 1000",\
"[12] 999",\
"[13] 999",\
"[14] 999",\
"[15] 999",\
"[16] 999",\
"[17] 999",\
"[18] 999",\
"[19] 999",\
"[20] 999",\
"[21] 999",\
"[22] 999",\
"[23] 999",\
"[24] 100",\
"[25] 100",\
"[26] 100",\
"[27] 100",\
"[28] 100",\
"[29] 100",\
"[30] 100",\
"[31] 100",\
"[32] 100",\
"[33] 30",\
"[34] 100",\
"[35] 30",\
"[36] 10",\
"[37] 10",\
"[38] 10",\
"[39] 10",\
"[40] 10",\
"[41] 10",\
"[42] 10",\
"[43] 10",\
"[44] 10",\
"[45] 10",\
"[46] 10",\
"[47] 10",\
"[48] 10",\
"[49] 10",\
"[50] 10",\
"[51] 10",\
"[52] 10",\
"[53] 10",\
"[54] 10",\
"[55] 10",\
"[56] 100",\
"[57] 10",\
"[58] 10",\
"[59] 10",\
"[60] 10",\
"[61] 10",\
"[62] 10",\
"[63] 10",\
"Ramp Up Speed = FLOAT[64] :",\
"[0] 100",\
"[1] 10",\
"[2] 10",\
"[3] 10",\
"[4] 10",\
"[5] 10",\
"[6] 10",\
"[7] 20",\
"[8] 20",\
"[9] 20",\
"[10] 20",\
"[11] 20",\
"[12] 20",\
"[13] 100",\
"[14] 100",\
"[15] 100",\
"[16] 100",\
"[17] 200",\
"[18] 200",\
"[19] 200",\
"[20] 200",\
"[21] 100",\
"[22] 100",\
"[23] 100",\
"[24] 20",\
"[25] 20",\
"[26] 20",\
"[27] 20",\
"[28] 20",\
"[29] 20",\
"[30] 20",\
"[31] 20",\
"[32] 20",\
"[33] 20",\
"[34] 20",\
"[35] 100",\
"[36] 20",\
"[37] 20",\
"[38] 20",\
"[39] 20",\
"[40] 20",\
"[41] 20",\
"[42] 20",\
"[43] 10",\
"[44] 10",\
"[45] 10",\
"[46] 10",\
"[47] 10",\
"[48] 10",\
"[49] 10",\
"[50] 10",\
"[51] 10",\
"[52] 10",\
"[53] 10",\
"[54] 10",\
"[55] 10",\
"[56] 10",\
"[57] 5",\
"[58] 5",\
"[59] 5",\
"[60] 5",\
"[61] 5",\
"[62] 5",\
"[63] 5",\
"Ramp Down Speed = FLOAT[64] :",\
"[0] 100",\
"[1] 10",\
"[2] 10",\
"[3] 10",\
"[4] 10",\
"[5] 10",\
"[6] 10",\
"[7] 50",\
"[8] 50",\
"[9] 50",\
"[10] 50",\
"[11] 50",\
"[12] 200",\
"[13] 200",\
"[14] 200",\
"[15] 200",\
"[16] 200",\
"[17] 200",\
"[18] 100",\
"[19] 100",\
"[20] 200",\
"[21] 100",\
"[22] 100",\
"[23] 200",\
"[24] 50",\
"[25] 50",\
"[26] 50",\
"[27] 50",\
"[28] 50",\
"[29] 50",\
"[30] 50",\
"[31] 50",\
"[32] 50",\
"[33] 50",\
"[34] 50",\
"[35] 20",\
"[36] 100",\
"[37] 100",\
"[38] 100",\
"[39] 100",\
"[40] 100",\
"[41] 100",\
"[42] 100",\
"[43] 10",\
"[44] 10",\
"[45] 10",\
"[46] 10",\
"[47] 10",\
"[48] 10",\
"[49] 10",\
"[50] 20",\
"[51] 20",\
"[52] 20",\
"[53] 20",\
"[54] 20",\
"[55] 20",\
"[56] 20",\
"[57] 20",\
"[58] 20",\
"[59] 20",\
"[60] 20",\
"[61] 20",\
"[62] 20",\
"[63] 20",\
"Recovery = INT32 : 0",\
"Names = STRING[64] :",\
"[32] Ch0",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] LEMON_Offset",\
"[32] LEMON_VG3",\
"[32] LEMON_T2",\
"[32] LEMON_VG2",\
"[32] LEMON_T1",\
"[32] LEMON_VG1",\
"[32] LEMON_Drift",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] LIME_Offset",\
"[32] LIME_VG3",\
"[32] LIME_T2",\
"[32] LIME_VG2",\
"[32] LIME_T1",\
"[32] LIME_VG1",\
"[32] LIME_Drift",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"[32] Name",\
"",\
NULL }

#endif

#ifndef EXCL_TRIGGER

#define TRIGGER_COMMON_DEFINED

typedef struct {
  UINT16    event_id;
  UINT16    trigger_mask;
  char      buffer[32];
  INT32     type;
  INT32     source;
  char      format[8];
  BOOL      enabled;
  INT32     read_on;
  INT32     period;
  double    event_limit;
  UINT32    num_subevents;
  INT32     log_history;
  char      frontend_host[32];
  char      frontend_name[32];
  char      frontend_file_name[256];
  char      status[256];
  char      status_color[32];
  BOOL      hidden;
  INT32     write_cache_size;
} TRIGGER_COMMON;

#define TRIGGER_COMMON_STR(_name) const char *_name[] = {\
"[.]",\
"Event ID = UINT16 : 1",\
"Trigger mask = UINT16 : 0",\
"Buffer = STRING : [32] SYSTEM",\
"Type = INT32 : 2",\
"Source = INT32 : 0",\
"Format = STRING : [8] MIDAS",\
"Enabled = BOOL : y",\
"Read on = INT32 : 1",\
"Period = INT32 : 100",\
"Event limit = DOUBLE : 0",\
"Num subevents = UINT32 : 0",\
"Log history = INT32 : 0",\
"Frontend host = STRING : [32] localhost",\
"Frontend name = STRING : [32] cygnus_daq",\
"Frontend file name = STRING : [256] /home/cygno/DAQ/online/cygnus_fe.cxx",\
"Status = STRING : [256] cygnus_daq@localhost",\
"Status color = STRING : [32] greenLight",\
"Hidden = BOOL : n",\
"Write cache size = INT32 : 0",\
"",\
NULL }

#endif

#ifndef EXCL_ENVIRONMENT

#define ENVIRONMENT_COMMON_DEFINED

typedef struct {
  UINT16    event_id;
  UINT16    trigger_mask;
  char      buffer[32];
  INT32     type;
  INT32     source;
  char      format[8];
  BOOL      enabled;
  INT32     read_on;
  INT32     period;
  double    event_limit;
  UINT32    num_subevents;
  INT32     log_history;
  char      frontend_host[32];
  char      frontend_name[32];
  char      frontend_file_name[256];
  char      status[256];
  char      status_color[32];
  BOOL      hidden;
  INT32     write_cache_size;
} ENVIRONMENT_COMMON;

#define ENVIRONMENT_COMMON_STR(_name) const char *_name[] = {\
"[.]",\
"Event ID = UINT16 : 5",\
"Trigger mask = UINT16 : 0",\
"Buffer = STRING : [32] SYSTEM",\
"Type = INT32 : 16",\
"Source = INT32 : 0",\
"Format = STRING : [8] MIDAS",\
"Enabled = BOOL : y",\
"Read on = INT32 : 255",\
"Period = INT32 : 60000",\
"Event limit = DOUBLE : 0",\
"Num subevents = UINT32 : 0",\
"Log history = INT32 : 1",\
"Frontend host = STRING : [32] localhost",\
"Frontend name = STRING : [32] SC Frontend",\
"Frontend file name = STRING : [256] /home/cygno/DAQ/online/scfe.cxx",\
"Status = STRING : [256] Partially disabled",\
"Status color = STRING : [32] yellowGreenLight",\
"Hidden = BOOL : n",\
"Write cache size = INT32 : 0",\
"",\
NULL }

#define ENVIRONMENT_SETTINGS_DEFINED

typedef struct {
  struct {
    struct {
      char      device[256];
      char      pwd[32];
      INT32     mscb_address[27];
      UINT8     mscb_index[27];
      BOOL      enabled;
      BOOL      debug;
      INT32     retries;
    } input;
    struct {
      BOOL      enabled;
    } output;
  } devices;
  float     update_threshold[27];
  float     input_offset[27];
  float     input_factor[27];
  char      names_input[27][32];
} ENVIRONMENT_SETTINGS;

#define ENVIRONMENT_SETTINGS_STR(_name) const char *_name[] = {\
"[Devices/Input]",\
"Device = STRING : [256] mscb399",\
"Pwd = STRING : [32] meg",\
"MSCB Address = INT32[27] :",\
"[0] 65535",\
"[1] 65535",\
"[2] 65535",\
"[3] 65535",\
"[4] 65535",\
"[5] 65535",\
"[6] 65535",\
"[7] 65535",\
"[8] 65535",\
"[9] 65535",\
"[10] 65535",\
"[11] 65535",\
"[12] 65535",\
"[13] 65535",\
"[14] 65535",\
"[15] 65535",\
"[16] 65535",\
"[17] 65535",\
"[18] 65535",\
"[19] 65535",\
"[20] 65535",\
"[21] 65535",\
"[22] 65535",\
"[23] 65535",\
"[24] 65535",\
"[25] 65535",\
"[26] 65535",\
"MSCB Index = UINT8[27] :",\
"[0] 0",\
"[1] 1",\
"[2] 2",\
"[3] 3",\
"[4] 4",\
"[5] 5",\
"[6] 6",\
"[7] 7",\
"[8] 8",\
"[9] 9",\
"[10] 10",\
"[11] 11",\
"[12] 12",\
"[13] 13",\
"[14] 14",\
"[15] 15",\
"[16] 16",\
"[17] 17",\
"[18] 18",\
"[19] 19",\
"[20] 20",\
"[21] 21",\
"[22] 22",\
"[23] 23",\
"[24] 24",\
"[25] 25",\
"[26] 26",\
"Enabled = BOOL : y",\
"Debug = BOOL : n",\
"Retries = INT32 : 10",\
"",\
"[Devices/Output]",\
"Enabled = BOOL : y",\
"",\
"[.]",\
"Update Threshold = FLOAT[27] :",\
"[0] 0.01",\
"[1] 0.001",\
"[2] 0.1",\
"[3] 0.1",\
"[4] 0.1",\
"[5] 0.1",\
"[6] 0.1",\
"[7] 0.1",\
"[8] 0.1",\
"[9] 0.1",\
"[10] 0.1",\
"[11] 0.1",\
"[12] 0.1",\
"[13] 0.1",\
"[14] 0.1",\
"[15] 0.1",\
"[16] 0.1",\
"[17] 0.1",\
"[18] 0.1",\
"[19] 0.1",\
"[20] 0.1",\
"[21] 0.1",\
"[22] 0.1",\
"[23] 0.1",\
"[24] 0.1",\
"[25] 0.1",\
"[26] 0.1",\
"Input Offset = FLOAT[27] :",\
"[0] 100",\
"[1] 0.4",\
"[2] 0",\
"[3] 0",\
"[4] 0",\
"[5] 0",\
"[6] 0",\
"[7] 0",\
"[8] 0",\
"[9] 0",\
"[10] 0",\
"[11] 0",\
"[12] 0",\
"[13] 0",\
"[14] 0",\
"[15] 0",\
"[16] 0",\
"[17] 0",\
"[18] 0",\
"[19] 0",\
"[20] 0",\
"[21] 0",\
"[22] 0",\
"[23] 0",\
"[24] 0",\
"[25] 0",\
"[26] 0",\
"Input Factor = FLOAT[27] :",\
"[0] 12.5",\
"[1] 0.1",\
"[2] 1",\
"[3] 1",\
"[4] 1",\
"[5] 1",\
"[6] 1",\
"[7] 1",\
"[8] 1",\
"[9] 1",\
"[10] 1",\
"[11] 1",\
"[12] 1",\
"[13] 1",\
"[14] 1",\
"[15] 1",\
"[16] 1",\
"[17] 1",\
"[18] 1",\
"[19] 1",\
"[20] 1",\
"[21] 1",\
"[22] 1",\
"[23] 1",\
"[24] 1",\
"[25] 1",\
"[26] 1",\
"Names Input = STRING[27] :",\
"[32] P0IIn0",\
"[32] P0IIn1",\
"[32] P0IIn2",\
"[32] P0IIn3",\
"[32] P0IIn4",\
"[32] P0IIn5",\
"[32] P0IIn6",\
"[32] P0IIn7",\
"[32] P0Calib",\
"[32] P1UIn0",\
"[32] P1UIn1",\
"[32] P1UIn2",\
"[32] P1UIn3",\
"[32] P1UIn4",\
"[32] P1UIn5",\
"[32] P1UIn6",\
"[32] P1UIn7",\
"[32] P1Calib",\
"[32] P3IIn0",\
"[32] P3IIn1",\
"[32] P3IIn2",\
"[32] P3IIn3",\
"[32] P3IIn4",\
"[32] P3IIn5",\
"[32] P3IIn6",\
"[32] P3IIn7",\
"[32] P3Calib",\
"",\
NULL }

#endif

